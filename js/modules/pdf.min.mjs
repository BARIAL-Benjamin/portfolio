export default class PDF{static async generatePDF(self,content,elementsToNotDisplay=null,format="PNG",title=document.title){const{jsPDF}=window.jspdf;const pdf=new jsPDF();if(elementsToNotDisplay)elementsToNotDisplay.forEach((el)=>(el.style.display="none"));self.target.style.display="none";const originalStyles={backgroundColor:content.style.backgroundColor,backgroundImage:content.style.backgroundImage,boxShadow:content.style.boxShadow,};content.style.backgroundColor="none";content.style.backgroundImage="none";content.style.boxShadow="none";const canvas=await html2canvas(content);const imgData=canvas.toDataURL(content,`image/${format.toLowerCase()}`);pdf.addImage(imgData,format,0,0);pdf.save(`${title}.pdf`);Object.assign(content.style,originalStyles);if(elementsToNotDisplay)elementsToNotDisplay.forEach((el)=>(el.style.display=""));self.target.style.display=""}
static async createButtonPDF(beforeWhere,content,elementsToNotDisplay=null,format="PNG",title=document.title){await import("../html2canvas.min.js");await import("../jspdf.umd.min.js");const titre=title.replaceAll(/[^a-zA-Z0-9À-ÿ\ ]+/g,'-');const button=document.createElement("button");button.textContent="Télécharger en PDF";button.title=titre;button.type="button";button.addEventListener("click",async(e)=>await PDF.generatePDF(e,content,elementsToNotDisplay,format,titre));beforeWhere.insertAdjacentElement("beforebegin",button)}}